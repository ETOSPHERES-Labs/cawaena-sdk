version: '3.7'

networks:
  default:
    name: cryptpayrs_devcontainer_default
    driver: bridge

services:
  mongo:
    image: mongo:latest
    restart: unless-stopped
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - default
    # network_mode: service:devcontainer

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    networks:
      - default

  daprd:
    image: daprio/daprd:latest
    restart: unless-stopped
    ports:
      - 3600:3600
      - 0.0.0.0:50001:50001
    volumes:
      - "../.dapr:/dapr"
    environment:
      DAPR_HTTP_PORT: 3600
      DAPR_GRPC_PORT: 50001
    command:
      [
        "./daprd",
        "--app-id",
        "mydapr",
        "--resources-path",
        "/dapr/ci/resources",
        "-log-level",
        "debug"
      ]
    networks:
      - default
    # network_mode: service:devcontainer
    # zipkin:
    #   image: openzipkin/zipkin
    #   restart: unless-stopped
    #   ports:
    #     - 9411:9411

    # networks:
    #   default:
    #     name: dapr-dev-container
    #     driver: bridge

    # Grafana agent
    # agent:
    #   image: grafana/agent:v0.37.2
    #   environment:
    #     - AGENT_MODE=flow
    #   ports:
    #     - "4319:4319"
    #     - "12345:12345"
    #   volumes:
    #     - "./agent-config.river:/etc/agent/config.river"
    #   command: ["run", "--server.http.listen-addr=0.0.0.0:12345", "/etc/agent/config.river"]
    #   network_mode: service:devcontainer

    # # OpenTelemetry Collector
    # otel-collector:
    #   image: otel/opentelemetry-collector:latest
    #   command: ["--config=/etc/otel-collector-config.yaml", "${OTELCOL_ARGS}"]
    #   volumes:
    #     - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    #   ports:
    #     - "1888:1888"   # pprof extension
    #     - "13133:13133" # health_check extension
    #     - "4317:4317"   # OTLP gRPC receiver
    #     - "55670:55679" # zpages extension
    #   network_mode: service:devcontainer
