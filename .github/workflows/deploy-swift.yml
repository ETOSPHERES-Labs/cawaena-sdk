name: deploy-swift

# only run this on push to main (eg. after PR merge)
on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  # Disable incremental compilation for faster from-scratch builds
  CARGO_INCREMENTAL: 0

# cancel the job if a newer pipeline starts for the same MR or branch
concurrency:
  group: deploy-swift-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-sdk-swift:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-ios,aarch64-apple-ios-sim,x86_64-apple-ios,aarch64-apple-darwin,x86_64-apple-darwin

      - uses: Swatinem/rust-cache@v2
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: "21.12"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - uses: swift-actions/setup-swift@v2
        with:
          swift-version: "6.0.1"

      - name: Build swift sdk
        run: |
          cd sdk/bindings/swift
          make xcframework

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: etopay-sdk-swift
          path: sdk/bindings/swift/CawaenaSdk
          if-no-files-found: error
          retention-days: 7
          overwrite: true

  deploy-sdk-swift:
    runs-on: macos-latest
    needs: build-sdk-swift
    # For now this does not work and just fails because the way it expects artifacts to be there. We need a better solution.
    if: false
    steps:
      - name: Checkout target repository
        uses: actions/checkout@v4
        with:
          repository: ETOSPHERES-Labs/etopay-sdk-swift
          token: ${{ secrets.SWIFT_PAT_GITHUB_ACTIONS }}
          path: target-repo

      - name: Copy built artifacts to target repository
        run: |
          cp -R sdk/bindings/swift/CawaenaSdk/Package.swift target-repo/
          cp -R sdk/bindings/swift/CawaenaSdk/README.md target-repo/
          cp -R sdk/bindings/swift/CawaenaSdk/Sources target-repo/

      - name: Configure Git for commit
        run: |
          cd target-repo
          git config user.email "bot@cawaena.com"
          git config user.name "bot"

      - name: Commit and push changes
        run: |
          cd target-repo
          git add .
          git commit -m "Update Swift SDK package files from commit ${{ github.sha }}" || echo "No changes to commit"
          git push
