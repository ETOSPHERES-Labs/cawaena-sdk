name: CI

on:
  push:

permissions:
  contents: read # Only for private repositories
  issues: read # Only for private repositories
  checks: write
  pull-requests: write

env:
  CARGO_TERM_COLOR: always
  SCCACHE_GHA_ENABLED: "true"
  RUSTC_WRAPPER: "sccache"

# cancel the job if a newer pipeline starts for the same MR or branch
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: dell
    container:
      image: ${{ vars.DEVCONTAINER_IMAGE }}:${{ vars.DEVCONTAINER_TAG }}
      credentials:
        username: ${{ secrets.ARTIFACTORY_USERNAME }}
        password: ${{ secrets.ARTIFACTORY_PASSWORD }}
    steps:
      - uses: actions/checkout@v4
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.6
      - name: Check format
        run: cargo fmt --check
      - name: Check for unused dependencies
        run: cargo machete
      - name: Check for clippy warnings
        run: cargo clippy --all-targets --all-features --color always -- -D warnings
      # - name: Audit dependencies
      #   run: cargo audit --color always

  unit-tests:
    runs-on: dell
    container:
      image: ${{ vars.DEVCONTAINER_IMAGE }}:${{ vars.DEVCONTAINER_TAG }}
      credentials:
        username: ${{ secrets.ARTIFACTORY_USERNAME }}
        password: ${{ secrets.ARTIFACTORY_PASSWORD }}
    env:
      VIVISWAP_ENV: testing
    steps:
      - uses: actions/checkout@v4
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.6
      - name: Run unit tests
        run: cargo llvm-cov nextest --profile ci --locked --lib --workspace --no-fail-fast --all-features --cobertura --output-path cobertura.xml --exclude cryptpay-sdk-jni --exclude cryptpay-sdk-swift --exclude cryptpay-sdk-wasm --ignore-filename-regex "sdk/bindings/|api_types/|.*/error\.rs"
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: ${{ github.workspace }}/target/nextest/ci/junit.xml
      - name: Publish Coverage
        uses: 5monkeys/cobertura-action@master
        with:
          path: cobertura.xml
          minimum_coverage: 75

  build-sdk-wasm:
    runs-on: dell
    container:
      image: ${{ vars.DEVCONTAINER_IMAGE }}:${{ vars.DEVCONTAINER_TAG }}
      credentials:
        username: ${{ secrets.ARTIFACTORY_USERNAME }}
        password: ${{ secrets.ARTIFACTORY_PASSWORD }}
    steps:
      - uses: actions/checkout@v4
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.6
      - name: Build wasm sdk
        run: |
          cd sdk/bindings/wasm
          wasm-pack build --release --scope eto --target web --out-dir out/web/pkg --out-name cryptpay-sdk-web
          wasm-pack pack out/web
          cd examples/webapp
          echo -e "RUST_LOG=info\nTRACING_ENV=dev" > ../.env
          wasm-pack build --release --scope eto
          pnpm install
          pnpm build
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: cryptpay-sdk-wasm
          path: sdk/bindings/wasm/out/**/*.tgz
          if-no-files-found: error
          retention-days: 7
          overwrite: true

  build-sdk-android:
    runs-on: dell
    container:
      image: ${{ vars.DEVCONTAINER_IMAGE }}:${{ vars.DEVCONTAINER_TAG }}
      credentials:
        username: ${{ secrets.ARTIFACTORY_USERNAME }}
        password: ${{ secrets.ARTIFACTORY_PASSWORD }}
    steps:
      - uses: actions/checkout@v4
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.6
      - name: Build android sdk
        run: cd sdk/bindings/android && make bundle
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: cryptpay-sdk-android
          path: sdk/bindings/android/jar/
          if-no-files-found: error
          retention-days: 7
          overwrite: true

  build-sdk-swift:
    runs-on: macOS
    steps:
      - uses: actions/checkout@v4
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.6
      - name: Build swift sdk
        run: |
          cd sdk/bindings/swift
          which cargo
          which sccache
          make compile_swift_main
          make xcframework
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: cryptpay-sdk-swift
          path: sdk/bindings/swift/CryptpaySdk
          if-no-files-found: error
          retention-days: 7
          overwrite: true

  android-bindings-tests:
    runs-on: dell
    needs: build-sdk-android
    container:
      image: ${{ vars.DEVCONTAINER_IMAGE }}:${{ vars.DEVCONTAINER_TAG }}
      credentials:
        username: ${{ secrets.ARTIFACTORY_USERNAME }}
        password: ${{ secrets.ARTIFACTORY_PASSWORD }}
    steps:
      - uses: actions/checkout@v4
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.6
      - name: Run android bindings tests
        run: cd sdk/bindings/android/tests && gradle test

  jnigen-integration-tests:
    runs-on: dell
    container:
      image: ${{ vars.DEVCONTAINER_IMAGE }}:${{ vars.DEVCONTAINER_TAG }}
      credentials:
        username: ${{ secrets.ARTIFACTORY_USERNAME }}
        password: ${{ secrets.ARTIFACTORY_PASSWORD }}
    steps:
      - uses: actions/checkout@v4
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.6
      - name: Run jnigen integration test
        run: cd tools/jnigen-integration-test && gradle test
